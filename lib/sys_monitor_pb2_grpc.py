# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import sys_monitor_pb2 as sys__monitor__pb2


class SystemMonitorStub(object):
    """Defining the main service: SystemMonitor  
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getRAMUsage = channel.unary_unary(
                '/SystemMonitor/getRAMUsage',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=sys__monitor__pb2.RAMinfo.FromString,
                )
        self.getCPUUsage = channel.unary_unary(
                '/SystemMonitor/getCPUUsage',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=sys__monitor__pb2.CPUFreq.FromString,
                )
        self.getDISkUsage = channel.unary_unary(
                '/SystemMonitor/getDISkUsage',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=sys__monitor__pb2.DISkinfo.FromString,
                )


class SystemMonitorServicer(object):
    """Defining the main service: SystemMonitor  
    """

    def getRAMUsage(self, request, context):
        """a streaming server rpc, response streaming rpc 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getCPUUsage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getDISkUsage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SystemMonitorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getRAMUsage': grpc.unary_unary_rpc_method_handler(
                    servicer.getRAMUsage,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=sys__monitor__pb2.RAMinfo.SerializeToString,
            ),
            'getCPUUsage': grpc.unary_unary_rpc_method_handler(
                    servicer.getCPUUsage,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=sys__monitor__pb2.CPUFreq.SerializeToString,
            ),
            'getDISkUsage': grpc.unary_unary_rpc_method_handler(
                    servicer.getDISkUsage,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=sys__monitor__pb2.DISkinfo.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'SystemMonitor', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SystemMonitor(object):
    """Defining the main service: SystemMonitor  
    """

    @staticmethod
    def getRAMUsage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SystemMonitor/getRAMUsage',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            sys__monitor__pb2.RAMinfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getCPUUsage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SystemMonitor/getCPUUsage',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            sys__monitor__pb2.CPUFreq.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getDISkUsage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SystemMonitor/getDISkUsage',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            sys__monitor__pb2.DISkinfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
